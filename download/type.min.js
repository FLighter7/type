/*!
 * @license MIT, 2021-present
 * @author FLighter
 * @see https://github.com/FLighter7/type
 */
var Type=function(e){"use strict";const t={CHECK_STRING:(e,t)=>"string"==typeof e&&t.includes(e),CHECK_STRING_CASE_INSENSITIVE:(e,t)=>"string"==typeof e&&(e=e.toLowerCase(),void 0!==t.find((t=>t.toLowerCase()===e))),STRING_EMPTY:e=>0===e.length,STRING_NOT_EMPTY:e=>e.length>0,STRING_LETTER:e=>/^[a-z]$/i.test(e),STRING_ONE_SYMBOL:e=>1===e.length,STRING_JSON:e=>{try{return JSON.parse(e),!0}catch(e){return!1}},NUMBER_INT:e=>Number.isInteger(e),NUMBER_FLOAT:e=>Number.isFinite(e)&&!Number.isInteger(e),NUMBER_FINITE:e=>Number.isFinite(e),NUMBER_INFINITE:e=>e===1/0||e===-1/0,NUMBER_NEGATIVE:e=>e<0,NUMBER_ZERO:e=>0===e,NUMBER_POSITIVE:e=>e>0},n={};for(const e of Object.keys(t))n[e]=e;const r=(e,r,i,o)=>{if(!i)return e;if(i=Array.isArray(i)?i:[i],!e&&!i.includes(n.CHECK_STRING)&&!i.includes(n.CHECK_STRING_CASE_INSENSITIVE))return!1;o=Array.isArray(o)?o:[o];for(const e of i){const n=t[e];if(!n)continue;if(!n(r,o))return!1}return!0},i="undefined",o=["true","false"],s=e=>"number"==typeof e&&e==e,c=Array.isArray;return e.TypeFlags=n,e.getStrictType=e=>{const t=typeof e;if("number"===t)return e!=e?"nan":t;if("object"!==t)return t;if(null===e)return"null";const n=/^\[object ([a-z0-9]+)\]$/i.exec(Object.prototype.toString.call(e));if(!n)return"notfound";const r=n[1].toLowerCase();return"object"===r&&e.constructor===Object?"plainobject":["string","number","boolean"].includes(r)?"object":r},e.getType=e=>typeof e,e.isArray=c,e.isBigInt=(e,t)=>{const r="bigint"==typeof e;if(!t)return r;const i=Array.isArray(t)?t:[t];if(i.includes(n.CHECK_STRING)||i.includes(n.CHECK_STRING_CASE_INSENSITIVE)){if("string"!=typeof e)return!1;try{const t=BigInt(e);return t>Number.MAX_SAFE_INTEGER||t<Number.MIN_SAFE_INTEGER}catch(e){return!1}}return r},e.isBoolean=(e,t)=>{const n="boolean"==typeof e;return t?r(n,e,t,o):n},e.isDate=e=>e instanceof Date,e.isFunction=e=>"function"==typeof e,e.isMap=e=>e instanceof Map,e.isNan=(e,t)=>{const n=e!=e;return t?r(n,e,t,"NaN"):n},e.isNull=(e,t)=>{const n=null===e;return t?r(n,e,t,"null"):n},e.isNumber=(e,t,i=!1)=>{let o=s(e);if(!t)return o;const c=Array.isArray(t)?t:[t],u=c.indexOf(n.CHECK_STRING),f=c.indexOf(n.CHECK_STRING_CASE_INSENSITIVE);if(u>=0||f>=0){if("string"!=typeof e)return!1;if(!i&&0===(e=e.trim()).length)return!1;const t=c.indexOf(n.NUMBER_INFINITE);if(f>=0&&t>=0){if(!/^[+-]?infinity$/i.test(e))return!1;e=e.toLowerCase().replace(/i/,"I"),delete c[t]}o=s(e=+e),u>=0&&delete c[u],f>=0&&delete c[f]}return r(o,e,c)},e.isObject=e=>"object"==typeof e&&null!==e,e.isPlainObject=e=>"object"==typeof e&&null!==e&&("[object Object]"===Object.prototype.toString.call(e)&&e.constructor===Object),e.isRegExp=e=>e instanceof RegExp,e.isSet=e=>e instanceof Set,e.isString=(e,t)=>{const n="string"==typeof e;return t?r(n,e,t):n},e.isSymbol=e=>"symbol"==typeof e,e.isUndefined=(e,t)=>{const n=typeof e===i;return t?r(n,e,t,i):n},e.isWeakMap=e=>e instanceof WeakMap,e.isWeakSet=e=>e instanceof WeakSet,Object.defineProperty(e,"__esModule",{value:!0}),e}({});
